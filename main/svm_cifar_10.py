# -*- coding: utf-8 -*-
"""SVM_CIFAR-10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XAFKZcGdSXNZD_oNyEd71tJomhTbHk46
"""

import tensorflow_datasets as tfds
import tensorflow as tf
import matplotlib.pyplot as plt 
import numpy as np
import pandas as pd
from sklearn.svm import SVC
from sklearn.pipeline import Pipeline
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix, ConfusionMatrixDisplay, hinge_loss

cifar = tf.keras.datasets.cifar10

(train_images, train_labels), (test_images, test_labels) = cifar.load_data()

train_images = train_images.reshape(train_images.shape[0],32*32*3)
test_images = test_images.reshape(test_images.shape[0],32*32*3)

train_images.shape

test_images.shape

train_images = train_images / 255.0

test_images = test_images / 255.0

pipe = Pipeline([('scaler',MinMaxScaler()) , ('classifier', SVC(kernel='rbf', C = 1) )])
pipe.fit(train_images[:6000],train_labels.ravel()[:6000])
predict_test = pipe.predict(test_images)

print(accuracy_score(test_labels, predict_test))
print(classification_report(test_labels, predict_test))

label_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
cm=confusion_matrix(predict_test,test_labels)
#Plot
disp=ConfusionMatrixDisplay(confusion_matrix=cm,display_labels=label_names)
fig, ax = plt.subplots(figsize=(10,10))
disp.plot(ax=ax);