# -*- coding: utf-8 -*-
"""RF_CIFAR-10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Fxpw-mFCcnB-Dp54G2ZM5fCSxy4FyUll

Random Forest with CIFAR-10
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

from sklearn.ensemble import RandomForestClassifier
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score
import tensorflow as tf
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
import matplotlib.pyplot as plt

cifar = tf.keras.datasets.cifar10

(train_images, train_labels), (test_images, test_labels) = cifar.load_data()

train_images = train_images.reshape(train_images.shape[0],32*32*3)
test_images = test_images.reshape(test_images.shape[0],32*32*3)

# It seems random forest is much faster than MLP and more accurate
model = RandomForestClassifier(n_estimators=128, criterion='entropy', max_depth=20, n_jobs=-1, oob_score=True) 
# model = MLPClassifier(max_iter=700) # 0.8557, 190 seconds
model.fit(train_images, train_labels.ravel())

# Predict
y_pred = model.predict(test_images)

# Print result
print(accuracy_score(test_labels, y_pred))

from sklearn.metrics import accuracy_score,classification_report,confusion_matrix
print(accuracy_score(test_labels, y_pred))
print(classification_report(test_labels, y_pred))

label_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
cm=confusion_matrix(y_pred,test_labels)
#Plot
disp=ConfusionMatrixDisplay(confusion_matrix=cm,display_labels=label_names)
fig, ax = plt.subplots(figsize=(10,10))
disp.plot(ax=ax);

oob_error = 1 - model.oob_score_
model.oob_score_